source-file ~/.tmux/plugins/tmux-reset/tmux-reset

# Stop tmux from launching login shells
# ref: https://superuser.com/a/1330842
set -g default-command "${SHELL}"

# ref: https://stackoverflow.com/a/40902312/2514803
run-shell 'tmux setenv -g TMUX_VERSION $(tmux -V | \
                           sed -En "s/^tmux[^0-9]*([.0-9]+).*/\1/p")'

# First remove *all* keybindings
# Then restore default keybindings
# Note: run tmux-reset-gen.sh to refresh the file if tmux upgraded
# ref: https://unix.stackexchange.com/a/255343/161486
if-shell '[ "$(echo "$TMUX_VERSION >= 3.0" | bc)" = 1 ]' \
    "unbind-key -a; source-file ~/.tmux.reset.conf"

# Correct the TERM variable according to terminal type
# Note: tmux v1.9 enables italic font in screen/screen-256 terminfo,
# which has no effect for a putty terminal emulator. tmux v2.3 fixes it.
# Note: KiTTY 0.70.0.7 added italic font support. So use tmux-256color which has italics support
# Prequirement: apt-get install ncurses-term
if-shell "echo ${TERM} | grep -q 256color" 'set -g default-terminal tmux-256color'

set -ga terminal-overrides ",*256col*:Tc"

# Curly Underlines
# ref: https://evantravers.com/articles/2021/02/05/curly-underlines-in-kitty-tmux-neovim/
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0

set-option -g escape-time 50

# Allow rename window title
set-option -g allow-rename on

# Set the terminal clipboard using OSC 52
set -g set-clipboard on

set -g base-index 1          # start indexing windows at 1 instead of 0
set -g pane-base-index 1     # start indexing panes at 1 instead of 0

# Point SSH_AUTH_SOCK to a fixed path
set-option -g update-environment "DISPLAY KRB5CCNAME SSH_ASKPASS \
SSH_AGENT_PID SSH_CONNECTION WINDOWID XAUTHORITY"
set-environment -g SSH_AUTH_SOCK $HOME/.ssh/ssh_auth_sock

# Set window notifications
setw -g monitor-activity on
set -g visual-activity on
set-option -g focus-events on

# If a "bell" is used in any of the attached sessions, trigger a bell in the current window
set-option -g bell-action any
#set-option -g visual-bell off

# Makes it such that the window is only resized if the smaller client is actively looking at it.
# Note: not support in iTerm/tmux integration mode
#setw -g aggressive-resize on

set -g history-limit 100000

# tmux-power config
set -g @tmux_power_prefix_highlight_pos 'L'
set -g @tmux_power_theme 'violet'

# Enable mouse control
# Since tmux v2.1, use single mouse option
set -g mouse
# Use below mouse options for previous version
# set -g mode-mouse on
# set -g mouse-resize-pane on
# set -g mouse-select-pane on
# set -g mouse-select-window on
#set mouse-utf8 on

# Enable Ctrl+Home Ctrl+End keys
set-option -g xterm-keys on
# Fix Home/End keys under TERM: xterm->tmux
bind-key -n Home send Escape "[1~"
bind-key -n End send Escape "[4~"

# Enable keybinding: Ctrl+Left/Rigth/Up/Down
#set -g terminal-overrides "xterm*:kLFT5=\eOD:kRIT5=\eOC:kUP5=\eOA:kDN5=\eOB:smkx@:rmkx@"

# Use vim keybindings in copy mode
setw -g mode-keys vi
if-shell '[ "$(echo "$TMUX_VERSION < 2.8" | bc)" = 1 ]' '\
    bind-key -t vi-copy v begin-selection; \
    bind-key -t vi-copy C-v rectangle-toggle; \
    bind-key -t vi-copy Space page-down; \
    bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"; \
    bind-key -t vi-copy Home start-of-line; \
    bind-key -t vi-copy End end-of-line; \
' '\
    bind-key -T copy-mode-vi v send -X begin-selection; \
    bind-key -T copy-mode-vi C-v send -X rectangle-toggle; \
    bind-key -T copy-mode-vi Space send -X page-down; \
    bind-key -T copy-mode-vi y send -X copy-pipe "reattach-to-user-namespace pbcopy"; \
    bind-key -T copy-mode-vi Home send -X start-of-line; \
    bind-key -T copy-mode-vi End send -X end-of-line; \
'
bind P paste-buffer
bind Escape copy-mode

# Use C-Space as prefix
set -g prefix2 C-Space
bind C-Space send-prefix -2

# Key bindings
unbind '%'
bind | split-window -h -c "#{pane_current_path}"
unbind '"'
bind - split-window -v -c "#{pane_current_path}"
bind _ split-window -v -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"
bind S setw synchronize-panes
# Bracketed paste
bind ] paste-buffer -p
# Reload tmux config
bind R source-file ~/.tmux.conf \; display-message "Config reloaded..."
# Go to last session/window
bind l switch-client -l
bind L last-window
bind -n C-S-Tab switch-client -l
bind -n C-Tab last-window
# Prefix Up/Down to select in session menu
bind Up choose-tree \; send-keys Up
bind Down choose-tree \; send-keys Down
# Alt arrow to switch windows
bind -n M-Left  previous-window
bind -n M-Right next-window
# Ctrl Shift arrow to swap arrange windows
bind-key -n M-S-Left swap-window -d -t -1
bind-key -n M-S-Right swap-window -d -t +1
# Search back to last prompt (mnemonic: "[b]ack"); searches for non-breaking
# space in prompt.
bind-key b copy-mode\; send-keys -X start-of-line\; send-keys -X search-backward "Â "

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'hallazzang/tmux-reset'
set -g @plugin 'wfxr/tmux-power'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'tmux-plugins/tmux-resurrect'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

